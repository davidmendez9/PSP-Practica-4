/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.MyList;
import Modelo.Analista;
import Modelo.Empleado;
import Modelo.Excepciones;
import Modelo.Fecha;
import Modelo.Programador;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author David
 */
public class PanelDatos extends javax.swing.JPanel {

    /**
     * Creates new form PanelDatos
     */
    InterfazGrafica principal;
    
    public PanelDatos(InterfazGrafica principal) {
        initComponents();
        
        this.principal = principal;
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonCreadoMasivo = new javax.swing.JButton();
        botonAnterior = new javax.swing.JButton();
        botonSiguiente = new javax.swing.JButton();
        botonOrdenar = new javax.swing.JButton();
        botonCalcular = new javax.swing.JButton();
        labelDato1 = new javax.swing.JLabel();
        labelDato2 = new javax.swing.JLabel();
        txtDatoA = new javax.swing.JTextField();
        txtDatoB = new javax.swing.JTextField();
        botonAceptar = new javax.swing.JButton();
        txtDia = new javax.swing.JTextField();
        botonCancelar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        botonBorrar = new javax.swing.JButton();
        txtMes = new javax.swing.JTextField();
        botonPrimero = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        botonUltimo = new javax.swing.JButton();
        txtAnio = new javax.swing.JTextField();
        botonJlist = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtSueldoMax = new javax.swing.JTextField();
        botonCargarEmpleados = new javax.swing.JButton();
        botonGuardarFichero = new javax.swing.JButton();
        botonCrearEmpleado = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNum = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtSueldo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtTipoEmpleado = new javax.swing.JTextField();
        botonOrdenarArrayList = new javax.swing.JButton();

        botonCreadoMasivo.setText("Creado masivo");
        botonCreadoMasivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCreadoMasivoActionPerformed(evt);
            }
        });

        botonAnterior.setText("<--- Anterior");
        botonAnterior.setMaximumSize(new java.awt.Dimension(113, 25));
        botonAnterior.setMinimumSize(new java.awt.Dimension(113, 25));
        botonAnterior.setPreferredSize(new java.awt.Dimension(113, 25));
        botonAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAnteriorActionPerformed(evt);
            }
        });

        botonSiguiente.setText("Siguiente --->");
        botonSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSiguienteActionPerformed(evt);
            }
        });

        botonOrdenar.setLabel("Ordenar");
        botonOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonOrdenarActionPerformed(evt);
            }
        });

        botonCalcular.setLabel("Calcular");
        botonCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalcularActionPerformed(evt);
            }
        });

        labelDato1.setText("Plus Anual:");

        labelDato2.setText("Nombre de Usuario:");

        botonAceptar.setText("Aceptar");
        botonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAceptarActionPerformed(evt);
            }
        });

        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });

        jLabel6.setText("/");

        botonBorrar.setText("Borrar");
        botonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBorrarActionPerformed(evt);
            }
        });

        txtMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMesActionPerformed(evt);
            }
        });

        botonPrimero.setText("Ir al primero");
        botonPrimero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonPrimeroActionPerformed(evt);
            }
        });

        jLabel7.setText("/");

        botonUltimo.setText("Ir al último");
        botonUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonUltimoActionPerformed(evt);
            }
        });

        botonJlist.setText("JList");
        botonJlist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonJlistActionPerformed(evt);
            }
        });

        jLabel8.setText("Sueldo Máximo:");

        botonCargarEmpleados.setText("Cargar fichero");
        botonCargarEmpleados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCargarEmpleadosActionPerformed(evt);
            }
        });

        botonGuardarFichero.setText("Guardar fichero");
        botonGuardarFichero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarFicheroActionPerformed(evt);
            }
        });

        botonCrearEmpleado.setText("Crear empleado");
        botonCrearEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCrearEmpleadoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(232, 0, 0));
        jLabel1.setText("EMPLEADOS");

        jLabel2.setText("Número:");

        jLabel3.setText("Nombre:");

        jLabel4.setText("Sueldo:");

        txtNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumActionPerformed(evt);
            }
        });

        jLabel5.setText("Fecha:");

        jLabel9.setText("Tipo de empleado:");

        botonOrdenarArrayList.setText("Ordenar ArrayList");
        botonOrdenarArrayList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonOrdenarArrayListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(botonBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonOrdenar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonGuardarFichero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonCargarEmpleados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtSueldo)
                            .addComponent(txtSueldoMax, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(txtDia, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(jLabel6)
                                .addGap(9, 9, 9)
                                .addComponent(txtMes, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(botonCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(91, 91, 91))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTipoEmpleado, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                            .addComponent(txtNum)
                            .addComponent(txtNombre)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(botonOrdenarArrayList, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(botonJlist, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(botonCrearEmpleado, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(botonCreadoMasivo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelDato1)
                                    .addComponent(labelDato2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtDatoA)
                                    .addComponent(txtDatoB, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(botonPrimero, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(botonUltimo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(botonAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(botonAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(botonCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(botonSiguiente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGap(0, 32, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtTipoEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDato1)
                    .addComponent(txtDatoA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDato2)
                    .addComponent(txtDatoB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(45, 45, 45))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtSueldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtSueldoMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(txtAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonCalcular))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAceptar)
                    .addComponent(botonCancelar))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(botonSiguiente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botonCargarEmpleados)
                            .addComponent(botonCrearEmpleado))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botonGuardarFichero)
                            .addComponent(botonCreadoMasivo))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botonOrdenar)
                            .addComponent(botonOrdenarArrayList)))
                    .addComponent(botonAnterior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonBorrar)
                    .addComponent(botonPrimero)
                    .addComponent(botonUltimo)
                    .addComponent(botonJlist))
                .addContainerGap(20, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void botonCreadoMasivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCreadoMasivoActionPerformed
        try {
            creadoMasivo();
        } catch (Excepciones ex) {
            Logger.getLogger(InterfazGrafica.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botonCreadoMasivoActionPerformed

    private void botonAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAnteriorActionPerformed
        retroceder();
    }//GEN-LAST:event_botonAnteriorActionPerformed

    private void botonSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSiguienteActionPerformed
        avanzar();
    }//GEN-LAST:event_botonSiguienteActionPerformed

    private void botonOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonOrdenarActionPerformed
        try {
            ordenar();
        } catch(Exception ex){}

    }//GEN-LAST:event_botonOrdenarActionPerformed

    private void botonCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCalcularActionPerformed
        try {
            accionCalcular();
        } catch (Excepciones ex) {
            Logger.getLogger(InterfazGrafica.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botonCalcularActionPerformed

    private void botonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAceptarActionPerformed
        try {
            crearEmpleado();
            mostrarEmpleados();
            salirModoCrear();
        } catch (Excepciones ex) {
            Logger.getLogger(InterfazGrafica.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botonAceptarActionPerformed

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        salirModoCrear();
        mostrarEmpleados();
    }//GEN-LAST:event_botonCancelarActionPerformed

    private void botonBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBorrarActionPerformed
        borrarEmpleado();
    }//GEN-LAST:event_botonBorrarActionPerformed

    private void txtMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMesActionPerformed

    private void botonPrimeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonPrimeroActionPerformed
        if(principal.lista.isLast())
        {
            JOptionPane.showMessageDialog(this, "Ya estás en el primer nodo");
        }
        else
        {
            irUltimo();
        }
    }//GEN-LAST:event_botonPrimeroActionPerformed

    private void botonUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonUltimoActionPerformed
        if(principal.lista.isFirst())
        {
            JOptionPane.showMessageDialog(this, "Ya estás en el último nodo");
        }
        else
        {
            irPrimero();
        }
    }//GEN-LAST:event_botonUltimoActionPerformed

    private void botonJlistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonJlistActionPerformed
        principal.Jlist = new JlistPane(principal);
        
        principal.panelDatos.setVisible(false);
        principal.add(principal.Jlist);
        principal.Jlist.setVisible(true);
        
        

        
    }//GEN-LAST:event_botonJlistActionPerformed

    private void botonCargarEmpleadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCargarEmpleadosActionPerformed
        try {
            cargarDatosFichero();
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(InterfazGrafica.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botonCargarEmpleadosActionPerformed

    private void botonGuardarFicheroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarFicheroActionPerformed
        guardarDatosFichero();
    }//GEN-LAST:event_botonGuardarFicheroActionPerformed

    private void botonCrearEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCrearEmpleadoActionPerformed
        modoCrear();
    }//GEN-LAST:event_botonCrearEmpleadoActionPerformed

    private void txtNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumActionPerformed

    private void botonOrdenarArrayListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonOrdenarArrayListActionPerformed
        ordenarCollection();
    }//GEN-LAST:event_botonOrdenarArrayListActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAceptar;
    private javax.swing.JButton botonAnterior;
    private javax.swing.JButton botonBorrar;
    private javax.swing.JButton botonCalcular;
    private javax.swing.JButton botonCancelar;
    private javax.swing.JButton botonCargarEmpleados;
    private javax.swing.JButton botonCreadoMasivo;
    private javax.swing.JButton botonCrearEmpleado;
    private javax.swing.JButton botonGuardarFichero;
    private javax.swing.JButton botonJlist;
    private javax.swing.JButton botonOrdenar;
    private javax.swing.JButton botonOrdenarArrayList;
    private javax.swing.JButton botonPrimero;
    private javax.swing.JButton botonSiguiente;
    private javax.swing.JButton botonUltimo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel labelDato1;
    private javax.swing.JLabel labelDato2;
    private javax.swing.JTextField txtAnio;
    private javax.swing.JTextField txtDatoA;
    private javax.swing.JTextField txtDatoB;
    private javax.swing.JTextField txtDia;
    private javax.swing.JTextField txtMes;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNum;
    private javax.swing.JTextField txtSueldo;
    private javax.swing.JTextField txtSueldoMax;
    private javax.swing.JTextField txtTipoEmpleado;
    // End of variables declaration//GEN-END:variables
    
    public void ordenarCollection()
    {
        ArrayList list = principal.crearArray();
        
        Collections.sort(list);
        
        System.out.println("ArrayList ordenado");
    }
    
    public int generarNumAleatorio1()
    {
        int valorEntero = (int) (Math.floor(Math.random()*(1000-2000+1)+2000));
        
        return valorEntero;
    }
    
    public int generarNumAleatorioMasivo()
    {
        int valorEntero = (int) (Math.floor(Math.random()*(2001-1000000+1)+1000000));
        
        return valorEntero;
    }

    public JButton getBotonAnterior() {
        return botonAnterior;
    }

    public JButton getBotonPrimero() {
        return botonPrimero;
    }

    public JButton getBotonSiguiente() {
        return botonSiguiente;
    }

    public JButton getBotonAceptar() {
        return botonAceptar;
    }

    public JButton getBotonCancelar() {
        return botonCancelar;
    }
    
    public void irPrimero()
    {
        while(principal.lista.isFirst() == false)
        {
            principal.lista.avanzar();
        }
        botonSiguiente.setEnabled(false);
        botonAnterior.setEnabled(true);
        mostrarEmpleados();
    }
    
    public void irUltimo()
    {
        while(principal.lista.isLast() == false)
        {
            principal.lista.retroceder();
        }
        botonSiguiente.setEnabled(true);
        botonAnterior.setEnabled(false);
        mostrarEmpleados();
    }
    
    public void compruebaCumple()
    {
        Empleado e1 = (Empleado) principal.lista.getActualNode().getMain();
        if(txtTipoEmpleado.getText().equals("Analista"))
        {
            Analista analista = (Analista)e1;
            if(analista.cumpleAnios())
            {
                if(e1.getSueldo() == e1.getSueldoMaximo())
                {
                    botonCalcular.setEnabled(false);
                }
                else
                {
                    botonCalcular.setEnabled(true);
                }
            }
            else
            {
                botonCalcular.setEnabled(false);
            }
        }
        else
        {
            Programador prog = (Programador)e1;
            if(prog.cumpleMes())
            {
                if(e1.getSueldo() == e1.getSueldoMaximo())
                {
                    botonCalcular.setEnabled(false);
                }
                else
                {
                    botonCalcular.setEnabled(true);
                }
            }
            else
            {
                botonCalcular.setEnabled(false);
            }
        }
    }
    
    public void modoCrear()
    {
        vaciarCasillas();
        txtNum.setEnabled(false);
        botonAceptar.setEnabled(true);
        botonCancelar.setEnabled(true);
        botonCargarEmpleados.setEnabled(false);
        botonGuardarFichero.setEnabled(false);
        botonSiguiente.setEnabled(false);
        botonAnterior.setEnabled(false);
        botonOrdenar.setEnabled(false);
        botonCreadoMasivo.setEnabled(false);
        botonCrearEmpleado.setEnabled(false);
        botonCalcular.setEnabled(false);
        cambiarLabels();
    }
    
    public void salirModoCrear()
    {
        txtNum.setEnabled(true);
        botonCargarEmpleados.setEnabled(true);
        botonGuardarFichero.setEnabled(true);
        botonSiguiente.setEnabled(true);
        botonAnterior.setEnabled(false);
        botonOrdenar.setEnabled(true);
        botonCreadoMasivo.setEnabled(true);
        botonCrearEmpleado.setEnabled(true);
        botonCalcular.setEnabled(true);
        botonAceptar.setEnabled(false);
        botonCancelar.setEnabled(false);
    }
    
    public void cambiarLabels()
    {
        labelDato1.setText("Dato 1:");
        labelDato2.setText("Dato 2:");
    }
    
    public void creadoMasivo() throws Excepciones
    {
        principal.lista = new MyList();
        int cont = 0;
        do
        {
            int num = generarNumAleatorioMasivo();
            
//            while(principal.lista.existe(num))
//            {
//                num = generarNumAleatorioMasivo();
//            }
            
            principal.lista.add(new Analista(num, "Empleado "+cont, 1, 2, new Fecha(1, 1, 2023), 0, ""), num);
            
            System.out.println("Contador: "+cont);
            cont++;
            
        }while(cont < 100000);
        cont = 0;
        do
        {
            int num = (int) (Math.floor(Math.random()*(1-2000+1)+2000));
//            while(principal.lista.existe(num))
//            {
//                num = (int) (Math.floor(Math.random()*(1-2000+1)+2000));
//            }
            
            principal.lista.add(new Analista(num, "Empleado "+cont, 1, 2, new Fecha(1, 1, 2023), 0, ""), num);
            
            System.out.println("Contador: "+cont);
            cont++;
        }while(cont < 20);
        
        mostrarEmpleados();
    }
    
    public void crearEmpleado() throws Excepciones
    {
        cambiarLabels();
        int num = generarNumAleatorio1();
        
//        while(lista.existe(num))
//        {
//            num = generarNumAleatorio1();
//        }

        if(txtNombre.getText().equals("") || txtDia.getText().equals("") || txtMes.getText().equals("") || txtAnio.getText().equals("") || txtDatoA.getText().equals("") || txtDatoB.getText().equals("") || txtTipoEmpleado.getText().equals("") || txtSueldo.getText().equals("") || txtSueldoMax.getText().equals(""))
        {
           JOptionPane.showMessageDialog(this, "Debes rellenar los huecos");
        }
        else
        {
            if(txtTipoEmpleado.getText().equals("Analista"))
            {
                try
                {
                    principal.lista.add(new Analista(num, txtNombre.getText(), Integer.parseInt(txtSueldo.getText()), Integer.parseInt(txtSueldoMax.getText()), new Fecha(Integer.parseInt(txtDia.getText()), Integer.parseInt(txtMes.getText()), Integer.parseInt(txtAnio.getText())), Integer.parseInt(txtDatoA.getText()), txtDatoB.getText()), num);
                }catch(Excepciones e){
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }  
            }
            else
            {
                try
                {
                    principal.lista.add(new Programador(num, txtNombre.getText(), Integer.parseInt(txtSueldo.getText()), Integer.parseInt(txtSueldoMax.getText()), new Fecha(Integer.parseInt(txtDia.getText()), Integer.parseInt(txtMes.getText()), Integer.parseInt(txtAnio.getText())), Integer.parseInt(txtDatoA.getText()), Integer.parseInt(txtDatoB.getText())), num);
                }catch(Excepciones e){
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
            }
        }
        
        
    }
    
    public void vaciarCasillas()
    {
        txtAnio.setText("");
        txtMes.setText("");
        txtDia.setText("");
        txtNombre.setText("");
        txtNum.setText("");
        txtSueldo.setText("");
        txtSueldoMax.setText("");
        txtTipoEmpleado.setText("");
        txtDatoA.setText("");
        txtDatoB.setText("");
        
    }
    
    public void mostrarEmpleados()
    {
        Empleado e1 = (Empleado) principal.lista.getActualNode().getMain();
        
        if(e1.getClass().getSimpleName().contains("Analista"))
        {
            txtTipoEmpleado.setText("Analista");
            Analista analista = (Analista)e1;
            txtDatoA.setText("" + analista.getPlusAnual());
            txtDatoB.setText("" + analista.getNombreUsuario());
        }
        else
        {
            txtTipoEmpleado.setText("Programador");
            Programador prog = (Programador)e1;
            txtDatoA.setText("" + prog.getSueldoExtra());
            txtDatoB.setText("" + prog.getNumeroProgramas());
        }
        txtNum.setText("" + e1.getNumero());
        txtNombre.setText(e1.getNombre());
        txtSueldo.setText("" + e1.getSueldo());
        txtSueldoMax.setText("" + e1.getSueldoMaximo());
        txtDia.setText("" + e1.getFechaAlta().getDia());
        txtMes.setText("" + e1.getFechaAlta().getMes());
        txtAnio.setText("" + e1.getFechaAlta().getAnio());
        
        diferenciarTipo();
    }
    
    public void borrarEmpleado()
    {
        if(principal.lista.isFirst())
        {
            principal.lista.removeElement();
            principal.lista.retroceder();
            mostrarEmpleados();
        }
        else if(principal.lista.isLast())
        {
            principal.lista.removeElement();
            principal.lista.avanzar();
            mostrarEmpleados();
        }
        else
        {
            principal.lista.removeElement();
            principal.lista.avanzar();
            mostrarEmpleados();
        }
            if(principal.lista.isFirst() && principal.lista.isLast())
            {
                botonSiguiente.setEnabled(false);
                botonAnterior.setEnabled(false);
                
            }
            
    }
    
    public void accionCalcular() throws Excepciones
    {
        
        Empleado e1 = (Empleado) principal.lista.getActualNode().getMain();
        
        if(txtTipoEmpleado.getText().equals("Analista"))
        {
            Analista analista = (Analista)e1;
            
            double res = 0;
            res = (e1.getSueldo() + (e1.getSueldo() * (analista.getPlusAnual()/100)));
            if(res < e1.getSueldoMaximo())
            {
                e1.setSueldo(res);
                txtSueldo.setText("" + e1.getSueldo());
                
                
            }
            else
            {
                JOptionPane.showMessageDialog(this, "El sueldo supera al sueldo máximo. Reajuste hecho.");
                e1.setSueldo(e1.getSueldoMaximo());
                txtSueldo.setText("" + e1.getSueldo());
                botonCalcular.setEnabled(false);
            }
        }
        else
        {
            Programador prog = (Programador)e1;
            
            double res = 0;
            res = (e1.getSueldo() + (e1.getSueldo() * (prog.getSueldoExtra()/100)));
            if(res < e1.getSueldoMaximo())
            {
                e1.setSueldo(res);
                txtSueldo.setText("" + e1.getSueldo());
                
                
            }
            else
            {
                JOptionPane.showMessageDialog(this, "El sueldo supera al sueldo máximo. Reajuste hecho.");
                e1.setSueldo(e1.getSueldoMaximo());
                txtSueldo.setText("" + e1.getSueldo());
                botonCalcular.setEnabled(false);
            }
        }
    }
    
    public void ordenar()
    {
        principal.lista.ordenar();
        mostrarEmpleados();
    }
    
    public void guardarDatosFichero()
    {
        principal.lista.crearFichero();
        JOptionPane.showMessageDialog(this, "Datos guardados en fichero.dat");
    }
    
    public void cargarDatosFichero() throws ClassNotFoundException, IOException 
    {
        ArrayList<Empleado> datosFichero = new ArrayList();
       
        if(principal.lista.existeFichero())
        {
            datosFichero = principal.lista.deserializar();
            borrarLista();
            for(int i = 0; i < datosFichero.size(); i++){
                principal.lista.add(datosFichero.get(i), datosFichero.get(i).getNumero());
            }
            JOptionPane.showMessageDialog(this, "Datos cargados con éxito");
            mostrarEmpleados();
        }
        else
        {
            JOptionPane.showMessageDialog(this, "El fichero no se encuentra o no existe.");
        }
    }
    
    public void diferenciarTipo()
    {
        Empleado e1 = (Empleado) principal.lista.getActualNode().getMain();
        if(e1.getClass().getSimpleName().contains("Analista"))
        {
            labelDato1.setText("Plus Anual:");
            labelDato2.setText("Nombre de Usuario:");
        }
        else
        {
            labelDato1.setText("Extra Mensual:");
            labelDato2.setText("Número de programas:");
        }
    }
    
    public void borrarLista()
    {
        principal.lista = new MyList();
    }
    
    public void avanzar()
    {
        
        principal.lista.avanzar();

        mostrarEmpleados();
        
        if(principal.lista.isFirst())
        {
            botonSiguiente.setEnabled(false);
        }
        botonAnterior.setEnabled(true);
        compruebaCumple();
    }
    
    public void retroceder()
    {
       
        principal.lista.retroceder();
        
        mostrarEmpleados();
        
        if(principal.lista.isLast())
        {
            botonAnterior.setEnabled(false);
        }
        botonSiguiente.setEnabled(true);
        compruebaCumple();
    }

}
