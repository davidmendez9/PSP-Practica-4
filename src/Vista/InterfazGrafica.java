/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.MyList;
import Controlador.MyList.Node;
import Modelo.Analista;
import Modelo.Empleado;
import Modelo.Excepciones;
import Modelo.Fecha;
import Modelo.IFecha;
import Modelo.Programador;
import java.awt.BorderLayout;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author David
 */
public class InterfazGrafica extends javax.swing.JFrame {

    /**
     * Creates new form InterefazGrafica
     */
    
    
    MyList lista = new MyList();
    JlistPane Jlist;
    PanelDatos panelDatos;
    
    public InterfazGrafica() {
        initComponents();
        
        
         try
        {
            lista.add(new Analista(50, "David", 1200, 1300, new Fecha(03,19, 2015), 20, "dmenndezz"), 50);
        }catch(Excepciones e){
            System.out.println(e.getMessage());
        }
        
        try
        {
            lista.add(new Analista(4, "Pablo", 1050, 1300, new Fecha(15, 11, 2016), 10, "bypablopablete"), 4);
        }catch(Excepciones e){
            System.out.println(e.getMessage());
        }
        
        try
        {
            lista.add(new Programador(2, "Juan", 1200, 1450, new Fecha(17, 04, 2023), 30, 5 ), 2);
        }catch(Excepciones e){
            System.out.println(e.getMessage());
        }
        
        try
        {
            lista.add(new Programador(7, "Pedro", 1400, 1500, new Fecha(9, 12, 2019), 20, 2), 7);
        }catch(Excepciones e){
            System.out.println(e.getMessage());
        }
        
        try
        {
            lista.add(new Analista(3, "Manuel", 1300, 2000, new Fecha(9, 11, 1999), 20, "pablete"), 3);
        }catch(Excepciones e){
            System.out.println(e.getMessage());
        }
        Jlist = new JlistPane(this);
        panelDatos = new PanelDatos(this);
        
        panelDatos.getBotonAnterior().setEnabled(false);
        panelDatos.getBotonAceptar().setEnabled(false);
        panelDatos.getBotonCancelar().setEnabled(false);
        
        
        panelDatos.mostrarEmpleados();
        panelDatos.compruebaCumple();
        
        this.setSize(646, 646);
        this.setLayout(new BorderLayout());
        this.getContentPane().add(panelDatos);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 646, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 501, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazGrafica().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    
    public ArrayList crearArray()
    {
        ArrayList<Empleado> empleados = new ArrayList();
        Node aux = lista.getFirstNode();
        
        while(aux != null)
        {
            empleados.add((Empleado) aux.getMain());
            aux = aux.getNextNode();
        }
        
        
        return empleados;
    }
    
//    private int generarNumAleatorio1()
//    {
//        int valorEntero = (int) (Math.floor(Math.random()*(1000-2000+1)+2000));
//        
//        return valorEntero;
//    }
//    
//    private int generarNumAleatorioMasivo()
//    {
//        int valorEntero = (int) (Math.floor(Math.random()*(2001-1000000+1)+1000000));
//        
//        return valorEntero;
//    }
//    
//    private void irPrimero()
//    {
//        while(lista.isFirst() == false)
//        {
//            lista.avanzar();
//        }
//        botonSiguiente.setEnabled(false);
//        botonAnterior.setEnabled(true);
//        mostrarEmpleados();
//    }
//    
//    private void irUltimo()
//    {
//        while(lista.isLast() == false)
//        {
//            lista.retroceder();
//        }
//        botonSiguiente.setEnabled(true);
//        botonAnterior.setEnabled(false);
//        mostrarEmpleados();
//    }
//    
//    private void compruebaCumple()
//    {
//        Empleado e1 = (Empleado) lista.getActualNode().getMain();
//        if(txtTipoEmpleado.getText().equals("Analista"))
//        {
//            Analista analista = (Analista)e1;
//            if(analista.cumpleAnios())
//            {
//                if(e1.getSueldo() == e1.getSueldoMaximo())
//                {
//                    botonCalcular.setEnabled(false);
//                }
//                else
//                {
//                    botonCalcular.setEnabled(true);
//                }
//            }
//            else
//            {
//                botonCalcular.setEnabled(false);
//            }
//        }
//        else
//        {
//            Programador prog = (Programador)e1;
//            if(prog.cumpleMes())
//            {
//                if(e1.getSueldo() == e1.getSueldoMaximo())
//                {
//                    botonCalcular.setEnabled(false);
//                }
//                else
//                {
//                    botonCalcular.setEnabled(true);
//                }
//            }
//            else
//            {
//                botonCalcular.setEnabled(false);
//            }
//        }
//    }
//    
//    private void modoCrear()
//    {
//        vaciarCasillas();
//        txtNum.setEnabled(false);
//        botonAceptar.setEnabled(true);
//        botonCancelar.setEnabled(true);
//        botonCargarEmpleados.setEnabled(false);
//        botonGuardarFichero.setEnabled(false);
//        botonSiguiente.setEnabled(false);
//        botonAnterior.setEnabled(false);
//        botonOrdenar.setEnabled(false);
//        botonCreadoMasivo.setEnabled(false);
//        botonCrearEmpleado.setEnabled(false);
//        botonCalcular.setEnabled(false);
//        cambiarLabels();
//    }
//    
//    private void salirModoCrear()
//    {
//        txtNum.setEnabled(true);
//        botonCargarEmpleados.setEnabled(true);
//        botonGuardarFichero.setEnabled(true);
//        botonSiguiente.setEnabled(true);
//        botonAnterior.setEnabled(false);
//        botonOrdenar.setEnabled(true);
//        botonCreadoMasivo.setEnabled(true);
//        botonCrearEmpleado.setEnabled(true);
//        botonCalcular.setEnabled(true);
//        botonAceptar.setEnabled(false);
//        botonCancelar.setEnabled(false);
//    }
//    
//    private void cambiarLabels()
//    {
//        labelDato1.setText("Dato 1:");
//        labelDato2.setText("Dato 2:");
//    }
//    
//    private void creadoMasivo() throws Excepciones
//    {
//        lista = new MyList();
//        int cont = 0;
//        do
//        {
//            int num = generarNumAleatorioMasivo();
//
//
//            lista.add(new Analista(num, "Empleado "+cont, 1, 2, new Fecha(1, 1, 2023), 0, ""), num);
//            
//            cont++;
//            
//        }while(cont < 100000);
//        cont = 0;
//        do
//        {
//            int num = (int) (Math.floor(Math.random()*(2001-1000000+1)+1000000));
//            
//            
//            lista.add(new Analista(num, "Empleado "+cont, 1, 2, new Fecha(1, 1, 2023), 0, ""), num);
//            
//            cont++;
//        }while(cont < 20);
//        
//        mostrarEmpleados();
//    }
//    
//    private void crearEmpleado() throws Excepciones
//    {
//        cambiarLabels();
//        int num = generarNumAleatorio1();
//        
////        while(lista.existe(num))
////        {
////            num = generarNumAleatorio1();
////        }
//
//        if(txtNombre.getText().equals("") || txtDia.getText().equals("") || txtMes.getText().equals("") || txtAnio.getText().equals("") || txtDatoA.getText().equals("") || txtDatoB.getText().equals("") || txtTipoEmpleado.getText().equals("") || txtSueldo.getText().equals("") || txtSueldoMax.getText().equals(""))
//        {
//           JOptionPane.showMessageDialog(this, "Debes rellenar los huecos");
//        }
//        else
//        {
//            if(txtTipoEmpleado.getText().equals("Analista"))
//            {
//                try
//                {
//                    lista.add(new Analista(num, txtNombre.getText(), Integer.parseInt(txtSueldo.getText()), Integer.parseInt(txtSueldoMax.getText()), new Fecha(Integer.parseInt(txtDia.getText()), Integer.parseInt(txtMes.getText()), Integer.parseInt(txtAnio.getText())), Integer.parseInt(txtDatoA.getText()), txtDatoB.getText()), num);
//                }catch(Excepciones e){
//                    JOptionPane.showMessageDialog(this, e.getMessage());
//                }  
//            }
//            else
//            {
//                try
//                {
//                    lista.add(new Programador(num, txtNombre.getText(), Integer.parseInt(txtSueldo.getText()), Integer.parseInt(txtSueldoMax.getText()), new Fecha(Integer.parseInt(txtDia.getText()), Integer.parseInt(txtMes.getText()), Integer.parseInt(txtAnio.getText())), Integer.parseInt(txtDatoA.getText()), Integer.parseInt(txtDatoB.getText())), num);
//                }catch(Excepciones e){
//                    JOptionPane.showMessageDialog(this, e.getMessage());
//                }
//            }
//        }
//        
//        
//    }
//    
//    private void vaciarCasillas()
//    {
//        txtAnio.setText("");
//        txtMes.setText("");
//        txtDia.setText("");
//        txtNombre.setText("");
//        txtNum.setText("");
//        txtSueldo.setText("");
//        txtSueldoMax.setText("");
//        txtTipoEmpleado.setText("");
//        txtDatoA.setText("");
//        txtDatoB.setText("");
//        
//    }
//    
//    private void mostrarEmpleados()
//    {
//        Empleado e1 = (Empleado) lista.getActualNode().getMain();
//        
//        if(e1.getClass().getSimpleName().contains("Analista"))
//        {
//            txtTipoEmpleado.setText("Analista");
//            Analista analista = (Analista)e1;
//            txtDatoA.setText("" + analista.getPlusAnual());
//            txtDatoB.setText("" + analista.getNombreUsuario());
//        }
//        else
//        {
//            txtTipoEmpleado.setText("Programador");
//            Programador prog = (Programador)e1;
//            txtDatoA.setText("" + prog.getSueldoExtra());
//            txtDatoB.setText("" + prog.getNumeroProgramas());
//        }
//        txtNum.setText("" + e1.getNumero());
//        txtNombre.setText(e1.getNombre());
//        txtSueldo.setText("" + e1.getSueldo());
//        txtSueldoMax.setText("" + e1.getSueldoMaximo());
//        txtDia.setText("" + e1.getFechaAlta().getDia());
//        txtMes.setText("" + e1.getFechaAlta().getMes());
//        txtAnio.setText("" + e1.getFechaAlta().getAnio());
//        
//        diferenciarTipo();
//    }
//    
//    public void borrarEmpleado()
//    {
//        if(lista.isFirst())
//        {
//            lista.removeElement();
//            lista.retroceder();
//            mostrarEmpleados();
//        }
//        else if(lista.isLast())
//        {
//            lista.removeElement();
//            lista.avanzar();
//            mostrarEmpleados();
//        }
//        else
//        {
//            lista.removeElement();
//            lista.avanzar();
//            mostrarEmpleados();
//        }
//            if(lista.isFirst() && lista.isLast())
//            {
//                botonSiguiente.setEnabled(false);
//                botonAnterior.setEnabled(false);
//                
//            }
//            
//    }
//    
//    private void accionCalcular() throws Excepciones
//    {
//        
//        Empleado e1 = (Empleado) lista.getActualNode().getMain();
//        
//        if(txtTipoEmpleado.getText().equals("Analista"))
//        {
//            Analista analista = (Analista)e1;
//            
//            double res = 0;
//            res = (e1.getSueldo() + (e1.getSueldo() * (analista.getPlusAnual()/100)));
//            if(res < e1.getSueldoMaximo())
//            {
//                e1.setSueldo(res);
//                txtSueldo.setText("" + e1.getSueldo());
//                
//                
//            }
//            else
//            {
//                JOptionPane.showMessageDialog(this, "El sueldo supera al sueldo máximo. Reajuste hecho.");
//                e1.setSueldo(e1.getSueldoMaximo());
//                txtSueldo.setText("" + e1.getSueldo());
//                botonCalcular.setEnabled(false);
//            }
//        }
//        else
//        {
//            Programador prog = (Programador)e1;
//            
//            double res = 0;
//            res = (e1.getSueldo() + (e1.getSueldo() * (prog.getSueldoExtra()/100)));
//            if(res < e1.getSueldoMaximo())
//            {
//                e1.setSueldo(res);
//                txtSueldo.setText("" + e1.getSueldo());
//                
//                
//            }
//            else
//            {
//                JOptionPane.showMessageDialog(this, "El sueldo supera al sueldo máximo. Reajuste hecho.");
//                e1.setSueldo(e1.getSueldoMaximo());
//                txtSueldo.setText("" + e1.getSueldo());
//                botonCalcular.setEnabled(false);
//            }
//        }
//    }
//    
//    private void ordenar()
//    {
//        lista.ordenar();
//        mostrarEmpleados();
//    }
//    
//    private void guardarDatosFichero()
//    {
//        lista.crearFichero();
//        JOptionPane.showMessageDialog(this, "Datos guardados en fichero.dat");
//    }
//    
//    private void cargarDatosFichero() throws ClassNotFoundException, IOException 
//    {
//        ArrayList<Empleado> datosFichero = new ArrayList();
//       
//        if(lista.existeFichero())
//        {
//            datosFichero = lista.deserializar();
//            borrarLista();
//            for(int i = 0; i < datosFichero.size(); i++){
//                lista.add(datosFichero.get(i), datosFichero.get(i).getNumero());
//            }
//            JOptionPane.showMessageDialog(this, "Datos cargados con éxito");
//            mostrarEmpleados();
//        }
//        else
//        {
//            JOptionPane.showMessageDialog(this, "El fichero no se encuentra o no existe.");
//        }
//    }
//    
//    private void diferenciarTipo()
//    {
//        Empleado e1 = (Empleado) lista.getActualNode().getMain();
//        if(e1.getClass().getSimpleName().contains("Analista"))
//        {
//            labelDato1.setText("Plus Anual:");
//            labelDato2.setText("Nombre de Usuario:");
//        }
//        else
//        {
//            labelDato1.setText("Extra Mensual:");
//            labelDato2.setText("Número de programas:");
//        }
//    }
//    
//    private void borrarLista()
//    {
//        lista = new MyList();
//    }
//    
//    private void avanzar()
//    {
//        
//        lista.avanzar();
//
//        mostrarEmpleados();
//        
//        if(lista.isFirst())
//        {
//            botonSiguiente.setEnabled(false);
//        }
//        botonAnterior.setEnabled(true);
//        compruebaCumple();
//    }
//    
//    private void retroceder()
//    {
//       
//        lista.retroceder();
//        
//        mostrarEmpleados();
//        
//        if(lista.isLast())
//        {
//            botonAnterior.setEnabled(false);
//        }
//        botonSiguiente.setEnabled(true);
//        compruebaCumple();
//    }
}
